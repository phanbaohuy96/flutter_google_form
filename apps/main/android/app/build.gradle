def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def appSpecificProps = new Properties()
def appSpecificPropsFile = rootProject.file('app_specific.properties')
if (appSpecificPropsFile.exists()) {
    appSpecificPropsFile.withReader('UTF-8') { reader ->
        appSpecificProps.load(reader)
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply from: 'signing.gradle'

android {
    compileSdkVersion 34

    compileOptions { 
        sourceCompatibility JavaVersion.VERSION_11         
        targetCompatibility JavaVersion.VERSION_11     
    }     
    
    kotlinOptions { 
        jvmTarget = '11'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false
    }

    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        profile {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "app"

    productFlavors {
        dev {
            applicationId appSpecificProps.getProperty('app.dev.package')
            resValue "string", "app_name", appSpecificProps.getProperty('app.dev.name')
            signingConfig signingConfigs.dev
        }
        // staging {
        //     applicationId appSpecificProps.getProperty('app.staging.package')
        //     resValue "string", "app_name", appSpecificProps.getProperty('app.staging.name')
        //     signingConfig signingConfigs.staging
        // }
        // prod {
        //     applicationId appSpecificProps.getProperty('app.prod.package')
        //     resValue "string", "app_name", appSpecificProps.getProperty('app.prod.name')
        //     signingConfig signingConfigs.prod
        // }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
